Q1. 	Show how many patients have a birth_date with 2010 as the birth year.

Ans:	SELECT COUNT(*) AS total_patients FROM patients WHERE YEAR(birth_date) = 2010;
	Alt// SELECT count(first_name) AS total_patients FROM patients WHERE birth_date >= '2010-01-01' AND birth_date <= '2010-12-31'


Q2. 	Show the first_name, last_name, and height of the patient with the greatest height.

Ans: select first_name,last_name, max(height) from patients;


Q3. 	Show all columns for patients who have one of the following patient_ids:1,45,534,879,1000

Ans: 	SELECT * FROM patients WHERE patient_id IN (1, 45, 534, 879, 1000);


Q4. 	show total number of admissions

Ans:	select count(*) from admissions;


Q5. 	Show all the columns from admissions where the patient was admitted and discharged on the same day.

Ans: 	select * from admissions where admission_date = discharge_date;


Q6. 	Show the total number of admissions for patient_id 579.

Ans: 	SELECT patient_id, COUNT(*) AS total_admissions FROM admissions WHERE patient_id = 579;


Q7. 	Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?

Ans: 	select distinct city from patients where province_id = 'NS';


Q8. 	Write a query to find the first_name, last name and birth date of patients who have height more than 160 and weight more than 70

Ans:	select first_name, last_name, birth_date from patients where height > 160 and weight > 70


Q9. 	Write a query to find list of patients first_name, last_name, and allergies from Hamilton where allergies are not null

Ans:	SELECT first_name, last_name, allergies FROM patients WHERE city = 'Hamilton' and allergies is not null 


Q10. 	Show unique birth years from patients and order them by ascending.

Ans:	SELECT DISTINCT YEAR(birth_date) AS birth_year FROM patients ORDER BY birth_year;


Q11. 	Show unique first names from the patients table which only occurs once in the list.

Ans: 	SELECT first_name FROM patients GROUP BY first_name HAVING COUNT(first_name) = 1


Q12.	Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.

Ans:	SELECT patient_id, first_name FROM patients WHERE first_name LIKE 's____%s'


Q13.	Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.

Ans:	SELECT patients.patient_id,  first_name, last_name FROM patients JOIN admissions ON admissions.patient_id = patients.patient_id
	WHERE diagnosis = 'Dementia';

Alt:	SELECT patient_id, first_name, last_name FROM patients WHERE patient_id IN (SELECT patient_id FROM admissions WHERE diagnosis = 'Dementia')


Q14.	Display every patient's first_name Order the list by the length of each name and then by alphbetically

Ans:	SELECT first_name FROM patients order by len(first_name), first_name;


Q15.	Show the total amount of male patients and the total amount of female patients in the patients table.
	Display the two results in the same row.

Ans:	SELECT (SELECT count(*) FROM patients WHERE gender='M') AS male_count, (SELECT count(*) FROM patients WHERE gender='F') AS female_count;


Q16.	Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. 
	Show results ordered ascending by allergies then by first_name then by last_name.

Ans:	select first_name, last_name, allergies from patients where allergies IN('Penicillin' or 'Morphine') 
	order by allergies, first_name, last_name;

Q17.	Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.

Ans:	select patient_id, diagnosis from admissions group by patient_id, diagnosis having count(*)>1;


Q18.	Show the city and the total number of patients in the city. Order from most to least patients and then by city name ascending.

Ans:	select city, count(*) as num_patients from patients group by city order by num_patients desc, city asc;


Q19.	Show first name, last name and role of every person that is either patient or physician.
	The roles are either "Patient" or "Physician"

Ans:	SELECT first_name, last_name, 'Patient' as role FROM patients union select first_name, last_name, 'Physician' from physicians;


Q20.	Show all allergies ordered by popularity. Remove NULL values from query.

Ans:	SELECT allergies,  COUNT(*) AS total_diagnosis FROM patients WHERE allergies IS NOT NULL GROUP BY allergies ORDER BY total_diagnosis DESC

Alt:	SELECT allergies, count(*) FROM patients WHERE allergies NOT NULL GROUP BY allergies ORDER BY count(*) DESC


Q21.	Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.

Ans:	SELECT first_name, last_name, birth_date FROM patients where year(birth_date) between 1970 and 1979 order by birth_date Asc;

Alt:	SELECT first_name, last_name, birth_date FROM patients WHERE birth_date >= '1970-01-01'  AND birth_date < '1980-01-01' ORDER BY birth_date ASC;
	
Alt:	SELECT  first_name,  last_name, birth_date FROM patients WHERE year(birth_date) LIKE '197%' ORDER BY birth_date ASC;


Q22.	We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, 
	then first_name in all lower case letters. Separate the last_name and first_name with a comma. 
	Order the list by the first_name in decending order  EX: SMITH,jane

Ans:	SELECT CONCAT(UPPER(last_name), ',', LOWER(first_name)) AS new_name_format FROM patients ORDER BY first_name DESC;

Alt:	SELECT   UPPER(last_name) || ',' || LOWER(first_name) AS new_name_format FROM patients ORDER BY first_name DESC;


Q23.	Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.

Ans: 	select province_id, sum(height) as H from patients group by province_id having H >= 7000;


Q24.	Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'

Ans:	select (Max(weight) - Min(weight)) as Actualweight  from patients where last_name = 'Maroni';


Q25.	Show all of the days of the month (1-31) and how many admission_dates occurred on that day. 
	Sort by the day with most admissions to least admissions.

Ans:	select day(admission_date) as day_number, count(*) as TotalAdmissions from admissions group by day_number order by TotalAdmissions desc;


Q26.	Show all columns for patient_id 542's most recent admission_date.

Ans:	SELECT * FROM admissions WHERE patient_id = 542 GROUP BY patient_id HAVING admission_date = MAX(admission_date);


Q27.	Show patient_id, attending_physician_id, and diagnosis for admissions that match one of the two criteria:
	1. patient_id is an odd number and attending_physician_id is either 1, 5, or 19.
	2. attending_physician_id contains a 2 and the length of patient_id is 3 characters.

Ans:	select attending_physician_id, patient_id, diagnosis from admissions where (attending_physician_id in (1,5,19) and patient_id % 2 !=0) or 
	(attending_physician_id like '%2'and len(patient_id) = 3);


Q28.	Show first_name, last_name, and the total number of admissions attended for each physician.
	Every admission has been attended by a physician.

Ans:	select first_name, last_name, count(*) as total from admissions A join physicians ph on ph.physician_id = A.attending_physician_id  
	group by attending_physician_id;

Alt:	SELECT   first_name, last_name,count(*) from  physicians p,  admissions a where  a.attending_physician_id = p.physician_id
	group by p.physician_id;



Q29.	For each physicain, display their id, full name, and the first and last admission date they attended.

Ans:	select  physician_id, first_name || ' ' || last_name as full_name, min(admission_date) as first_admission_date,
	max(admission_date) as last_admission_date from admissions a  join physicians ph on a.attending_physician_id = ph.physician_id
	group by physician_id;


Q30.	Display the total amount of patients for each province. Order by descending.

Ans:	SELECT  province_name, COUNT(*) as patient_count FROM patients pa join province_names pr on pr.province_id = pa.province_id
	group by pr.province_id order by patient_count desc;


Hard:-


Q31.	Show all of the patients grouped into weight groups. Show the total amount of patients in each weight group.
	Order the list by the weight group decending.

Ans:	SELECT COUNT(*) AS patients_in_group, FLOOR(weight / 10) * 10 AS weight_group
	FROM patients GROUP BY weight_group ORDER BY weight_group DESC;


Q32.	Show patient_id, weight, height, isObese from the patients table.Display isObese as a boolean 0 or 1.

	Obese is defined as weight(kg)/(height(m)2) >= 30. weight is in units kg. height is in units cm.
	

Ans:	SELECT patient_id, weight, height, (CASE WHEN weight/(POWER(height/100.0,2)) >= 30 THEN 1
	ELSE 0 END) AS isObese FROM patients;

    


    







  
  